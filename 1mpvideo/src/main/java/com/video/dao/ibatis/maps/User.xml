<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="User">
	<typeAlias alias="User" type="com.video.domain.User" />
	<typeAlias alias="SubscribeUser"
		type="com.video.domain.SubscribeUser" />
	<resultMap id="User" class="User">
		<result property="id" column="id" />
		<result property="userName" column="username" />
		<result property="password" column="password" />
		<result property="realName" column="realname" />
		<result property="email" column="email" />
		<result property="passwordHint" column="passwordhint" />
		<result property="hintAns" column="hintans" />
		<result property="mobilePhone" column="mobilephone" />
		<result property="qq" column="qq" />
		<result property="postCode" column="postcode" />
		<result property="address" column="address" />
		<result property="regDate" column="regdate" />
		<result property="lastLoginDate" column="lastlogin_date" />
		<result property="gender" column="gender" />
		<result property="birthday" column="birthday" />
		<result property="area" column="area" />
		<result property="marriage" column="marriage" />
		<result property="hobby" column="hobby" />
		<result property="signature" column="signature" />
		<result property="level" column="level" />
		<result property="score" column="score" />
		<result property="fortune" column="fortune" />
		<result property="loginTimes" column="login_times" />
		<result property="face" column="face" />
		<result property="education" column="education" />
		<result property="side" column="side" />
		<result property="layout" column="layout" />
		<result property="lastLoginIp" column="lastlogin_ip" />
		<result property="grade" column="grade" />
		<result property="status" column="status" />
	</resultMap>

	<resultMap id="UserJoin" class="User">
		<result property="id" column="id" />
		<result property="userName" column="username" />
		<result property="realName" column="realname" />
		<result property="face" column="face" />
		<result property="gender" column="gender" />
		<result property="score" column="score" />
		<result property="birthday" column="birthday" />
		<result property="fortune" column="fortune" />
		<result property="subscribeCount" column="snum" />
		<result property="beSubscribeCount" column="pnum" />
		<result property="videoCount" column="vnum" />
		<result property="friendCount" column="fnum" />
		<result property="playBillCount" column="onum" />
		<result property="signature" column="signature" />
	</resultMap>

	<resultMap class="User" id="UserEasy">
		<result property="id" column="uid" />
	</resultMap>
	
	<resultMap class="User" id="UserEasy2">
		<result property="id" column="uid" />
		<result property="commentCount" column="commentcount"/>
	</resultMap>
	
	<resultMap class="User" id="OtherUser">
		<result property="id" column="u.id" />
		<result property="userName" column="u.realname" />
		<result property="face" column="u.face" />
	</resultMap>

	<resultMap id="SubscribeUserJoin"
		class="com.video.domain.SubscribeUser">
		<result property="user.id" column="u.id" />
		<result property="user.realName" column="u.realname" />
		<result property="user.face" column="u.face" />
		<result property="passiveUser.id" column="p.id" />
		<result property="passiveUser.realName" column="p.realname" />
		<result property="passiveUser.face" column="p.face" />
		<result property="addDate" column="s.add_date" />
	</resultMap>

	<resultMap id="SubscribeUser" class="SubscribeUser">
		<result property="user.id" column="user_id" />
		<result property="passiveUser.id" column="passive_id" />
		<result property="addDate" column="add_date" />
	</resultMap>

	<resultMap class="User" id="UserUsePlaybill">
		<result property="id" column="u.id" />
		<result property="realName" column="u.realname" />
		<result property="face" column="u.face" />
		<result property="browseCount" column="browsecount" />
		<result property="commentCount" column="commentcount" />
		<result property="collectionCount" column="collectioncount" />
		<result property="pointSum" column="pointSum" />
	</resultMap>

	<resultMap id="Friend" class="User">
		<result property="id" column="u.id" />
		<result property="userName" column="u.username" />
		<result property="face" column="u.face" />
		<result property="realName" column="u.realname" />
	</resultMap>
	
	<delete id="deleteFriend" parameterClass="com.video.domain.Friend" >
	delete from friends where (uid=#user.id# and fuid=#fUser.id#) or (uid=#fUser.id# and fuid=#user.id#)
	</delete>

	<select id="getUser2ById" parameterClass="java.lang.Long"
		resultMap="UserJoin">
		select d.signature signature,d.id id,d.username
		username,d.realname realname,d.face face,d.gender
		gender,d.birthday birthday,d.score score,d.fortune
		fortune,d.fnum,d.vnum,d.snum,d.pnum,count(o.id) onum from
		(select c.signature signature,c.id id,c.username
		username,c.realname realname,c.face face,c.gender
		gender,c.birthday birthday,c.score score,c.fortune
		fortune,c.fnum,c.vnum,c.snum,count(x.passive_id) pnum from
		(select b.signature signature,b.id id,b.username
		username,b.realname realname,b.face face,b.gender
		gender,b.birthday birthday,b.score score,b.fortune
		fortune,b.fnum fnum,b.vnum vnum,count(s.user_id) snum from
		(select a.signature,a.id id,a.username username,a.realname
		realname,a.face face,a.gender gender,a.birthday birthday,a.score
		score,a.fortune fortune,a.fnum fnum,count(v.id) vnum from
		(select u.signature signature,u.id id,u.username
		username,u.realname realname,u.face face,u.gender
		gender,u.birthday birthday,u.score score,u.fortune
		fortune,count(f.fid) fnum from users u left join friends f on
		f.uid = u.id group by u.id) a left join w_video v on v.user_id =
		a.id group by a.id) b left join w_subscribes s on s.user_id =
		b.id group by b.id) c left join w_subscribes x on x.passive_id =
		c.id group by c.id) d left join w_specials o on o.user_id = d.id
		where d.id=#value# group by d.id
	</select>

	<select id="getUsersOrderByNewVideo"
		parameterClass="com.video.util.Pagination" resultMap="UserEasy">
		select w.uid from (select v.user_id uid from w_video v order by
		add_date desc) w where w.uid!=0 group by w.uid limit #startIndex#,#size#
	</select>
	
	<select id="getUsersOrderByBrowseTimes"
		parameterClass="com.video.util.Pagination" resultMap="UserEasy">
		select v.user_id uid from w_video v group by v.user_id order by
		sum(v.browse_count) desc limit #startIndex#,#size#
	</select>
	
	<select id="countUsersOrderByCommentCount" resultClass="int">
		select count(distinct user_id) from w_video
	</select>
	
	<select id="getUsersOrderByCommentCount"
		parameterClass="com.video.util.Pagination" resultMap="UserEasy2">
		select w.uid,w.num commentcount from  (select v.user_id uid,count(c.id) num from
		w_video v left join w_comments c on v.id= c.video_id group by
		v.id order by count(c.id) desc) w group by w.uid limit 
		#startIndex#,#size#
	</select>

	<select id="getUserUsePlaybillById" parameterClass="User"
		resultMap="UserUsePlaybill">
		select u.id, u.realname, u.face,sum(v.browse_count) browsecount,
		count(distinct (c.id)) commentcount, count(distinct
		(co.video_id)) collectioncount, sum(v.point) pointsum from users
		u left join w_video v on u.id = v.user_id left join w_comments c
		on v.id = c.video_id left join w_collections co on v.id =
		co.video_id where u.id = #id# group by u.id
	</select>

	<select id="countSubscribeUser"
		parameterClass="com.video.util.Pagination" resultClass="int">
		select count(*) from w_subscribes 
		<dynamic prepend="where">
			<isNotEmpty property="condition.user.id" prepend="and">
				user_id = #condition.user.id#
			</isNotEmpty>
			
			<isNotEmpty property="condition.passiveUser.id"
				prepend="and">
				passive_id =#condition.passiveUser.id#
			</isNotEmpty>
		</dynamic>
	</select>
	
	<select id="getSubscribeUsers"
		parameterClass="com.video.util.Pagination"
		resultMap="SubscribeUserJoin">
		select u.id,u.realname,u.face,p.id,p.realname,p.face,s.add_date
		from w_subscribes s left join users u on u.id = s.user_id left
		join users p on p.id = s.passive_id
		<dynamic prepend="where">
			<isNotEmpty property="condition.user.id" prepend="and">
				s.user_id = #condition.user.id#
			</isNotEmpty>
			<isNotEmpty property="condition.passiveUser.id"
				prepend="and">
				s.passive_id =#condition.passiveUser.id#
			</isNotEmpty>
		</dynamic>
		order by s.add_date desc limit #startIndex#,#size#
	</select>

	<select id="getUsers2" parameterClass="com.video.util.Pagination"
		resultMap="UserJoin">
		select d.signature signature,d.id id,d.username
		username,d.realname realname,d.face face,d.gender
		gender,d.birthday birthday,d.score score,d.fortune
		fortune,d.fnum,d.vnum,d.snum,d.pnum,count(o.id) onum from
		(select c.signature signature,c.id id,c.username
		username,c.realname realname,c.face face,c.gender
		gender,c.birthday birthday,c.score score,c.fortune
		fortune,c.fnum,c.vnum,c.snum,count(x.passive_id) pnum from
		(select b.signature signature,b.id id,b.username
		username,b.realname realname,b.face face,b.gender
		gender,b.birthday birthday,b.score score,b.fortune
		fortune,b.fnum fnum,b.vnum vnum,count(s.user_id) snum from
		(select a.signature signature,a.id id,a.username
		username,a.realname realname,a.face face,a.gender
		gender,a.birthday birthday,a.score score,a.fortune
		fortune,a.fnum fnum,count(v.id) vnum from (select u.signature
		signature,u.id id,u.username username,u.realname realname,u.face
		face,u.gender gender,u.birthday birthday,u.score score,u.fortune
		fortune,count(f.fid) fnum from users u  left join friends f on
		f.uid = u.id group by u.id) a left join w_video v on v.user_id =
		a.id group by a.id) b left join w_subscribes s on s.user_id =
		b.id group by b.id) c left join w_subscribes x on x.passive_id =
		c.id group by c.id) d  left join w_specials o on o.user_id = d.id where d.id !=0 
		<isNotEmpty property="condition.realName" prepend="and">
				d.realname like #condition.realName# escape '!'
			</isNotEmpty>
		group by d.id
		<isNotEmpty prepend="order by" property="orderFieldName">
			$orderFieldName$ DESC
		</isNotEmpty>
		limit #startIndex#,#size#
	</select>

	<insert id="createUser" parameterClass="User">
		insert into users ( username,
		password,realname,email,passwordhint,hintans,mobilephone,qq,postcode,address,regdate,
		lastlogin_date,gender,birthday,area,marriage,hobby,signature,face,education)
		values(
		#userName#,#password#,#realName#,#email#,#passwordHint#,#hintAns#,#mobilePhone#,#qq#,#postCode#,#address#,#regDate#,#lastLoginDate#,
		#gender#,#birthday#,#area#,#marriage#,#hobby#,#signature#,#face#,#education#)
		<selectKey keyProperty="id">select last_insert_id()</selectKey>
	</insert>
	
	<select id="getUserById" parameterClass="java.lang.Long"
		resultMap="User">
		select id, username,
		password,realname,email,passwordhint,hintans,mobilephone,qq,postcode,address,regdate,
		lastlogin_date,gender,birthday,area,marriage,hobby,signature,level,score,fortune,login_times,face,education,side,layout,lastlogin_ip,grade,status
		from users where id = #id#
	</select>
	
	<select id="getUserByName" parameterClass="java.lang.String"
		resultMap="User">
		select id, username,
		password,realname,email,passwordhint,hintans,mobilephone,qq,postcode,address,regdate,
		lastlogin_date,gender,birthday,area,marriage,hobby,signature,level,score,fortune,login_times,face,education,side,layout,lastlogin_ip,grade,status
		from users where username = #userName#
	</select>
	
	<select id="getUserByEmail" parameterClass="java.lang.String"
		resultMap="User">
		select id, username,
		password,realname,email,passwordhint,hintans,mobilephone,qq,postcode,address,regdate,
		lastlogin_date,gender,birthday,area,marriage,hobby,signature,level,score,fortune,login_times,face,education,side,layout,lastlogin_ip,grade,status
		from users where email = #email#
	</select>
	
	<select id="getUserByRealName" parameterClass="java.lang.String"
		resultMap="User">
		select id, username,
		password,realname,email,passwordhint,hintans,mobilephone,qq,postcode,address,regdate,
		lastlogin_date,gender,birthday,area,marriage,hobby,signature,level,score,fortune,login_times,face,education,side,layout,lastlogin_ip,grade,status
		from users where realname = #realName#
	</select>
	
	<select id="countUser" parameterClass="com.video.util.Pagination"
		resultClass="int">
		select count(*) from users
		<dynamic prepend="where">
			<isNotEmpty property="condition.userName" prepend="and">
				username like #condition.userName# escape '!'
			</isNotEmpty>
			<isNotEmpty property="condition.realName" prepend="and">
				realname like #condition.realName# escape '!'
			</isNotEmpty>
		</dynamic>
	</select>
	
	<select id="getUsers" parameterClass="com.video.util.Pagination"
		resultMap="User">
		select id, username,
		password,realname,email,passwordhint,hintans,mobilephone,qq,postcode,address,regdate,
		lastlogin_date,gender,birthday,area,marriage,hobby,signature,level,score,fortune,login_times,face,education,side,layout,lastlogin_ip,grade,status
		from users where id != 0 
			<isNotEmpty property="condition.userName" prepend="and">
				username like #condition.userName# escape '!'
			</isNotEmpty>
			<isNotEmpty property="condition.realName" prepend="and">
				realname like #condition.realName# escape '!'
			</isNotEmpty>
		<isNotEmpty prepend="order by" property="orderFieldName">
			$orderFieldName$
		</isNotEmpty>
		<isEqual compareValue="true" property="desc">desc</isEqual>
		limit #startIndex#,#size#
	</select>
	
	<update id="updateUser" parameterClass="User">
		update users set username=#userName#,
		password=#password#,realname=#realName#,email=#email#,passwordhint=#passwordHint#,hintans=#hintAns#,
		mobilephone=#mobilePhone#,qq=#qq#,postcode=#postCode#,address=#address#,regdate=#regDate#,
		lastlogin_date=#lastLoginDate#,gender=#gender#,birthday=#birthday#,area=#area#,marriage=#marriage#,hobby=#hobby#,signature=#signature#,level=#level#,score=#score#,
		fortune=#fortune#,login_times=#loginTimes#,face=#face#,education=#education#,side=#side#,layout=#layout#,lastlogin_ip=#lastLoginIp#,grade=#grade#,status=#status#
		where id=#id#
	</update>
	
	<delete id="deleteUser" parameterClass="java.lang.Long">
		delete from users where id = #id#
	</delete>
	
	<select id="listUsers" parameterClass="com.video.util.Pagination"
		resultMap="User">
		select id, username,
		password,realname,email,passwordhint,hintans,mobilephone,qq,postcode,address,regdate,
		lastlogin_date,gender,birthday,area,marriage,hobby,signature,level,score,fortune,login_times,face,education,side,layout,lastlogin_ip,grade,status
		from users where id != 0 
			<isNotEmpty property="condition.grade" prepend="and">
				grade = #condition.grade#
			</isNotEmpty>
	</select>

	<select id="countFriend" parameterClass="com.video.util.Pagination"
		resultClass="int">
		select count(*) from friends
		<dynamic prepend="where">
			<isNotEmpty property="condition.id" prepend="and">
				uid = #condition.id#
			</isNotEmpty>

		</dynamic>
	</select>

	<select id="getFriends" parameterClass="com.video.util.Pagination"
		resultMap="Friend">
		select u.id,u.face,u.realname,u.username from friends f left
		join users u on u.id = f.uid
		<dynamic prepend="where">
			<isNotEmpty property="condition.id" prepend="and">
				f.fuid = #condition.id#
			</isNotEmpty>
		</dynamic>
		limit #startIndex#,#size#
	</select>

	<select id="getFriendId" parameterClass="com.video.domain.Friend"
		resultClass="java.lang.Long">
		select fid from friends where uid=#user.id# and fuid=#fUser.id#
	</select>

	<insert id="createFriend"
		parameterClass="com.video.domain.Friend">
		insert into friends(uid,fuid,regdate)
		values(#user.id#,#fUser.id#,#regdate#)
	</insert>

	<select id="countOtherUserByVideoId"
		parameterClass="com.video.util.Pagination" resultClass="int">
		select count(user_id) from w_play_history
		<dynamic prepend="where">
			<isNotEmpty property="condition.video.id" prepend="and">
				video_id = #condition.video.id#
			</isNotEmpty>
			<isNotEmpty property="condition.user.id" prepend="and">
				user_id != #condition.user.id#
			</isNotEmpty>
		</dynamic>
	</select>
	
	<select id="getOtherUserByVideoId"
		parameterClass="com.video.util.Pagination" resultMap="OtherUser">
		select u.id,u.realname,u.face from w_play_history p left join
		users u on p.user_id=u.id
		<dynamic prepend="where">
			<isNotEmpty property="condition.video.id" prepend="and">
				p.video_id = #condition.video.id#
			</isNotEmpty>
			<isNotEmpty property="condition.user.id" prepend="and">
				p.user_id != #condition.user.id#
			</isNotEmpty>
		</dynamic>
		order by p.add_date limit #startIndex#,#size#
	</select>

	<insert id="createSubscribe" parameterClass="SubscribeUser">
		insert into w_subscribes(user_id,passive_id,add_date)
		values(#user.id#,#passiveUser.id#,#addDate#)
	</insert>
	
	<select id="getSubscribe" parameterClass="SubscribeUser"
		resultMap="SubscribeUser">
		select user_id,passive_id,add_date from w_subscribes
		<dynamic prepend="where">
			<isNotEmpty property="user.id" prepend="and">
				user_id = #user.id#
			</isNotEmpty>
			<isNotEmpty property="passiveUser.id" prepend="and">
				passive_id = #passiveUser.id#
			</isNotEmpty>
		</dynamic>
	</select>
	
	<delete id="deleteSubscribe" parameterClass="SubscribeUser">
	delete from w_subscribes where user_id = #user.id# and passive_id = #passiveUser.id#
	</delete>

	<select id="getUser" parameterClass="User" resultMap="User">
		select
		id,username,password,realname,email,passwordhint,hintans,mobilephone,
		qq,postcode,address,regdate,lastlogin_date,gender,birthday,area,marriage,
		hobby,signature,level,score,fortune,login_times,face,education,side,layout,
		lastlogin_ip,grade,status from users where id != 0 
			<isNotEmpty property="userName" prepend="and">
				username = #userName#
			</isNotEmpty>
			<isNotEmpty property="password" prepend="and">
				password = #password#
			</isNotEmpty>
			<isNotEmpty property="email" prepend="and">
				email = #email#
			</isNotEmpty>
	</select>
	
	<select id="getStars" resultClass="java.lang.Long">
	select user_id from w_stars limit 2 
	</select>
	
	<select id="countMySubscibeUsers" parameterClass="java.lang.Long" resultClass="int">
	select count(*) from w_subscribes where user_id = #value#
	</select>
	
	<select id="countMyFans" parameterClass="java.lang.Long" resultClass="int">
	select count(*) from w_subscribes where passive_id = #value#
	</select>
	
	
	<select id="countSimilars" parameterClass="com.video.util.Pagination"
		resultClass="int">
		select count(*) from users 
		<dynamic prepend="where">
			<isNotEmpty property="condition.id" prepend="and">
				id != #condition.id# 
			</isNotEmpty>
			<isNotEmpty property="condition.id" prepend="and">
			id not in (select fuid from friends where uid=1)
			</isNotEmpty>

		</dynamic>
	</select>

	<select id="getSimilars" parameterClass="com.video.util.Pagination"
		resultMap="Friend">
		select u.id,u.face,u.realname,u.username from users  u
			<dynamic prepend="where">
			<isNotEmpty property="condition.id" prepend="and">
				u.id != #condition.id# 
			</isNotEmpty>
			<isNotEmpty property="condition.id" prepend="and">
				u.id not in (select fuid from friends where uid=1) 
			</isNotEmpty>
			order by rand() 
		</dynamic>
		limit #startIndex#,#size#
	</select>
	
	
	
</sqlMap>